{"componentChunkName":"component---src-templates-doc-js","path":"/tutorial/blog/react/reset-password/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Reset Password\",\n  \"date\": \"2020-05-10\",\n  \"order\": 79\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"When the user submits the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"../forget-password/\"\n  }), \"forger password form\"), \" the user will receive an email with a link, when the user clicks on that links the user will be landed here.\"), mdx(\"p\", null, \"This page will contain a form with two fields \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"password\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"passwordConfirmation\"), \".\"), mdx(\"h2\", null, \"What You Will Learn Regarding Aventum?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Making a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"POST\"), \" request to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"http://localhost:3030/users/resetPassword\"), \" with the user's \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"password\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"passwordConfirmation\"), \" fields in the request body and the access token that extracted from the URL in the request header as \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"x-access-token\"), \" will reset the user's password.\")), mdx(\"hr\", null), mdx(\"p\", null, \"Inside the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"containers\"), \" folder create the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ResetPassword\"), \" folder and inside this one create the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ResetPassword.js\"), \" file.\"), mdx(\"p\", null, \"At the top of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ResetPassword.js\"), \" file import the required modules:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=src/containers/ResetPassword/ResetPassword.js\",\n    \"title\": \"src/containers/ResetPassword/ResetPassword.js\"\n  }), \"import React, { useState } from \\\"react\\\"\\nimport { useHistory, useParams } from \\\"react-router-dom\\\"\\n\")), mdx(\"p\", null, \"Next create our main \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ResetPassword\"), \" component function:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"highlight=4 title=src/containers/ResetPassword/ResetPassword.js\",\n    \"highlight\": \"4\",\n    \"title\": \"src/containers/ResetPassword/ResetPassword.js\"\n  }), \"import React, { useState } from \\\"react\\\"\\nimport { useHistory, useParams } from \\\"react-router-dom\\\"\\n\\nexport default function ResetPassword() {}\\n\")), mdx(\"p\", null, \"We need to extract the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"token\"), \" from there URL also we need the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"history\"), \" to redirect the user to the login page on success.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"highlight=5,6 title=src/containers/ResetPassword/ResetPassword.js\",\n    \"highlight\": \"5,6\",\n    \"title\": \"src/containers/ResetPassword/ResetPassword.js\"\n  }), \"import React, { useState } from \\\"react\\\"\\nimport { useHistory, useParams } from \\\"react-router-dom\\\"\\n\\nexport default function ResetPassword() {\\n  let { token } = useParams()\\n  let history = useHistory()\\n}\\n\")), mdx(\"p\", null, \"Next, we need to manage two states \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"password\"), \" and the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"passwordConfirmation\"), \" states.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"highlight=8,9 title=src/containers/ResetPassword/ResetPassword.js\",\n    \"highlight\": \"8,9\",\n    \"title\": \"src/containers/ResetPassword/ResetPassword.js\"\n  }), \"import React, { useState } from \\\"react\\\"\\nimport { useHistory, useParams } from \\\"react-router-dom\\\"\\n\\nexport default function ResetPassword() {\\n  let { token } = useParams()\\n  let history = useHistory()\\n\\n  const [password, setPassword] = useState(\\\"\\\")\\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\\\"\\\")\\n}\\n\")), mdx(\"p\", null, \"Next, define the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onSubmit\"), \" function that will be fired when the user submits the form.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"highlight=11-28 title=src/containers/ResetPassword/ResetPassword.js\",\n    \"highlight\": \"11-28\",\n    \"title\": \"src/containers/ResetPassword/ResetPassword.js\"\n  }), \"import React, { useState } from \\\"react\\\"\\nimport { useHistory, useParams } from \\\"react-router-dom\\\"\\n\\nexport default function ResetPassword() {\\n  let { token } = useParams()\\n  let history = useHistory()\\n\\n  const [password, setPassword] = useState(\\\"\\\")\\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\\\"\\\")\\n\\n  async function onSubmit(event) {\\n    event.preventDefault()\\n    const response = await fetch(\\\"http://localhost:3030/users/resetPassword\\\", {\\n      method: \\\"POST\\\",\\n      headers: {\\n        \\\"Content-Type\\\": \\\"application/json\\\",\\n        \\\"x-access-token\\\": token,\\n      },\\n      body: JSON.stringify({\\n        password,\\n        passwordConfirmation,\\n      }),\\n    })\\n\\n    if (response.status === 200) {\\n      history.push(\\\"/login\\\")\\n    }\\n  }\\n}\\n\")), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onSubmit\"), \" function will make a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"POST\"), \" request to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http://localhost:3030/users/resetPassword\"), \" endpoint with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"password\"), \" and the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"passwordConfirmation\"), \" in the request body and the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"token\"), \" in the request header, on the success we will redirect the user to the login page.\"), mdx(\"p\", null, \"Finally render our component:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"highlight=30-62 title=src/containers/ResetPassword/ResetPassword.js\",\n    \"highlight\": \"30-62\",\n    \"title\": \"src/containers/ResetPassword/ResetPassword.js\"\n  }), \"import React, { useState } from \\\"react\\\"\\nimport { useHistory, useParams } from \\\"react-router-dom\\\"\\n\\nexport default function ResetPassword() {\\n  let { token } = useParams()\\n  let history = useHistory()\\n\\n  const [password, setPassword] = useState(\\\"\\\")\\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\\\"\\\")\\n\\n  async function onSubmit(event) {\\n    event.preventDefault()\\n    const response = await fetch(\\\"http://localhost:3030/users/resetPassword\\\", {\\n      method: \\\"POST\\\",\\n      headers: {\\n        \\\"Content-Type\\\": \\\"application/json\\\",\\n        \\\"x-access-token\\\": token,\\n      },\\n      body: JSON.stringify({\\n        password,\\n        passwordConfirmation,\\n      }),\\n    })\\n\\n    if (response.status === 200) {\\n      history.push(\\\"/login\\\")\\n    }\\n  }\\n\\n  return (\\n    <div>\\n      <form onSubmit={onSubmit}>\\n        <div className=\\\"field-wrapper\\\">\\n          <label htmlFor=\\\"password\\\">Enter your new password: </label>\\n          <input\\n            value={password}\\n            onChange={e => setPassword(e.target.value)}\\n            type=\\\"password\\\"\\n            name=\\\"password\\\"\\n            id=\\\"password\\\"\\n            required\\n          />\\n        </div>\\n        <div className=\\\"field-wrapper\\\">\\n          <label htmlFor=\\\"passwordConfirmation\\\">\\n            Repeat your new password:{\\\" \\\"}\\n          </label>\\n          <input\\n            value={passwordConfirmation}\\n            onChange={e => setPasswordConfirmation(e.target.value)}\\n            type=\\\"password\\\"\\n            name=\\\"passwordConfirmation\\\"\\n            id=\\\"passwordConfirmation\\\"\\n            required\\n          />\\n        </div>\\n        <div className=\\\"field-wrapper\\\">\\n          <input type=\\\"submit\\\" value=\\\"Submit!\\\" />\\n        </div>\\n      </form>\\n    </div>\\n  )\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#what-you-will-learn-regarding-aventum","title":"What You Will Learn Regarding Aventum?"}]},"frontmatter":{"title":"Reset Password"}}},"pageContext":{"slug":"/tutorial/blog/react/reset-password/","prev":{"fields":{"slug":"/tutorial/blog/react/forget-password/"},"frontmatter":{"title":"Forget Password"}},"next":{"fields":{"slug":"/tutorial/blog/react/registration/"},"frontmatter":{"title":"Registration"}}}},"staticQueryHashes":["681094712"]}