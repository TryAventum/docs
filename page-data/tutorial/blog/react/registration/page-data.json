{"componentChunkName":"component---src-templates-doc-js","path":"/tutorial/blog/react/registration/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Registration\",\n  \"date\": \"2020-05-10\",\n  \"order\": 80\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This page will contain a form that will register the new users.\"), mdx(\"h2\", null, \"What You Will Learn Regarding Aventum?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Making a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"POST\"), \" request to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"http://localhost:3030/users/register\"), \" with the user's fields like \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"firstName\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"lastName\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"email\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"picture\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"password\"), \", and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"passwordConfirmation\"), \" on success will register a new user and we will get the access token(\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"x-access-token\"), \") in the response header and the user's data in the response body.\")), mdx(\"hr\", null), mdx(\"p\", null, \"Inside the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"containers\"), \" folder create the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Registration\"), \" folder and inside this one create the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Registration.js\"), \" file.\"), mdx(\"p\", null, \"At the top of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Registration.js\"), \" file import the required modules:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=src/containers/Registration/Registration.js\",\n    \"title\": \"src/containers/Registration/Registration.js\"\n  }), \"import React, { useState } from \\\"react\\\"\\nimport { useHistory } from \\\"react-router-dom\\\"\\nimport EmailConfirmationStatus from \\\"../../components/EmailConfirmationStatus/EmailConfirmationStatus\\\"\\n\")), mdx(\"p\", null, \"Next define our component function:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"highlight=5 title=src/containers/Registration/Registration.js\",\n    \"highlight\": \"5\",\n    \"title\": \"src/containers/Registration/Registration.js\"\n  }), \"import React, { useState } from \\\"react\\\"\\nimport { useHistory } from \\\"react-router-dom\\\"\\nimport EmailConfirmationStatus from \\\"../../components/EmailConfirmationStatus/EmailConfirmationStatus\\\"\\n\\nexport default function Registration({ user, onLogin }) {}\\n\")), mdx(\"p\", null, \"We need the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"history\"), \" to redirect the user to the home page on success along with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"firstName\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"lastName\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"email\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"password\"), \", and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"passwordConfirmation\"), \" states.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"highlight=6-12 title=src/containers/Registration/Registration.js\",\n    \"highlight\": \"6-12\",\n    \"title\": \"src/containers/Registration/Registration.js\"\n  }), \"import React, { useState } from \\\"react\\\"\\nimport { useHistory } from \\\"react-router-dom\\\"\\nimport EmailConfirmationStatus from \\\"../../components/EmailConfirmationStatus/EmailConfirmationStatus\\\"\\n\\nexport default function Registration({ user, onLogin }) {\\n  let history = useHistory()\\n\\n  const [firstName, setFirstName] = useState(\\\"\\\")\\n  const [lastName, setLastName] = useState(\\\"\\\")\\n  const [email, setEmail] = useState(\\\"\\\")\\n  const [password, setPassword] = useState(\\\"\\\")\\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\\\"\\\")\\n}\\n\")), mdx(\"p\", null, \"Now define the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onSubmit\"), \" function that will be fired when the user submits the form.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"highlight=14-37 title=src/containers/Registration/Registration.js\",\n    \"highlight\": \"14-37\",\n    \"title\": \"src/containers/Registration/Registration.js\"\n  }), \"import React, { useState } from \\\"react\\\"\\nimport { useHistory } from \\\"react-router-dom\\\"\\nimport EmailConfirmationStatus from \\\"../../components/EmailConfirmationStatus/EmailConfirmationStatus\\\"\\n\\nexport default function Registration({ user, onLogin }) {\\n  let history = useHistory()\\n\\n  const [firstName, setFirstName] = useState(\\\"\\\")\\n  const [lastName, setLastName] = useState(\\\"\\\")\\n  const [email, setEmail] = useState(\\\"\\\")\\n  const [password, setPassword] = useState(\\\"\\\")\\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\\\"\\\")\\n\\n  async function onSubmit(event) {\\n    event.preventDefault()\\n    const response = await fetch(\\\"http://localhost:3030/users/register\\\", {\\n      method: \\\"POST\\\",\\n      headers: {\\n        \\\"Content-Type\\\": \\\"application/json\\\",\\n      },\\n      body: JSON.stringify({\\n        firstName,\\n        lastName,\\n        email,\\n        password,\\n        passwordConfirmation,\\n      }),\\n    })\\n\\n    const token = response.headers.get(\\\"x-access-token\\\")\\n\\n    let userData = await response.json()\\n    localStorage.setItem(\\\"user-data\\\", JSON.stringify(userData))\\n    localStorage.setItem(\\\"x-access-token\\\", token)\\n    onLogin(userData)\\n    history.push(\\\"/\\\")\\n  }\\n}\\n\")), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onSubmit\"), \" function will make a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"POST\"), \" request to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http://localhost:3030/users/register\"), \" endpoint and will put the form data in the request body, on the success we will get the token(\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"x-access-token\"), \") in the response header and the user data in the response body, we will store them to the local storage and will call the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onLogin\"), \" props function and passing the user data and finally will redirect the user to the home page.\"), mdx(\"p\", null, \"Finally let's render our component:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"highlight=39-103 title=src/containers/Registration/Registration.js\",\n    \"highlight\": \"39-103\",\n    \"title\": \"src/containers/Registration/Registration.js\"\n  }), \"import React, { useState } from \\\"react\\\"\\nimport { useHistory } from \\\"react-router-dom\\\"\\nimport EmailConfirmationStatus from \\\"../../components/EmailConfirmationStatus/EmailConfirmationStatus\\\"\\n\\nexport default function Registration({ user, onLogin }) {\\n  let history = useHistory()\\n\\n  const [firstName, setFirstName] = useState(\\\"\\\")\\n  const [lastName, setLastName] = useState(\\\"\\\")\\n  const [email, setEmail] = useState(\\\"\\\")\\n  const [password, setPassword] = useState(\\\"\\\")\\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\\\"\\\")\\n\\n  async function onSubmit(event) {\\n    event.preventDefault()\\n    const response = await fetch(\\\"http://localhost:3030/users/register\\\", {\\n      method: \\\"POST\\\",\\n      headers: {\\n        \\\"Content-Type\\\": \\\"application/json\\\",\\n      },\\n      body: JSON.stringify({\\n        firstName,\\n        lastName,\\n        email,\\n        password,\\n        passwordConfirmation,\\n      }),\\n    })\\n\\n    const token = response.headers.get(\\\"x-access-token\\\")\\n\\n    let userData = await response.json()\\n    localStorage.setItem(\\\"user-data\\\", JSON.stringify(userData))\\n    localStorage.setItem(\\\"x-access-token\\\", token)\\n    onLogin(userData)\\n    history.push(\\\"/\\\")\\n  }\\n\\n  return (\\n    <div>\\n      <EmailConfirmationStatus user={user} />\\n      <form onSubmit={onSubmit}>\\n        <div className=\\\"field-wrapper\\\">\\n          <label htmlFor=\\\"firstName\\\">First Name: </label>\\n          <input\\n            value={firstName}\\n            onChange={e => setFirstName(e.target.value)}\\n            type=\\\"text\\\"\\n            name=\\\"firstName\\\"\\n            id=\\\"firstName\\\"\\n            required\\n          />\\n        </div>\\n        <div className=\\\"field-wrapper\\\">\\n          <label htmlFor=\\\"lastName\\\">Last Name: </label>\\n          <input\\n            value={lastName}\\n            onChange={e => setLastName(e.target.value)}\\n            type=\\\"text\\\"\\n            name=\\\"lastName\\\"\\n            id=\\\"lastName\\\"\\n            required\\n          />\\n        </div>\\n        <div className=\\\"field-wrapper\\\">\\n          <label htmlFor=\\\"email\\\">Enter your email: </label>\\n          <input\\n            value={email}\\n            onChange={e => setEmail(e.target.value)}\\n            type=\\\"email\\\"\\n            name=\\\"email\\\"\\n            id=\\\"email\\\"\\n            required\\n          />\\n        </div>\\n        <div className=\\\"field-wrapper\\\">\\n          <label htmlFor=\\\"password\\\">Enter new password: </label>\\n          <input\\n            value={password}\\n            onChange={e => setPassword(e.target.value)}\\n            type=\\\"password\\\"\\n            name=\\\"password\\\"\\n            id=\\\"password\\\"\\n          />\\n        </div>\\n        <div className=\\\"field-wrapper\\\">\\n          <label htmlFor=\\\"passwordConfirmation\\\">\\n            Repeat your new password:{\\\" \\\"}\\n          </label>\\n          <input\\n            type=\\\"password\\\"\\n            name=\\\"passwordConfirmation\\\"\\n            id=\\\"passwordConfirmation\\\"\\n            value={passwordConfirmation}\\n            onChange={e => setPasswordConfirmation(e.target.value)}\\n          />\\n        </div>\\n        <div>\\n          <input type=\\\"submit\\\" value=\\\"Register!\\\" />\\n        </div>\\n      </form>\\n    </div>\\n  )\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#what-you-will-learn-regarding-aventum","title":"What You Will Learn Regarding Aventum?"}]},"frontmatter":{"title":"Registration"}}},"pageContext":{"slug":"/tutorial/blog/react/registration/","prev":{"fields":{"slug":"/tutorial/blog/react/reset-password/"},"frontmatter":{"title":"Reset Password"}},"next":{"fields":{"slug":"/tutorial/blog/react/custom-react-hooks/"},"frontmatter":{"title":"Custom React Hooks"}}}},"staticQueryHashes":["681094712"]}