{"componentChunkName":"component---src-templates-doc-js","path":"/tutorial/blog/react/login-page/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Login Page\",\n  \"date\": \"2020-05-02\",\n  \"order\": 73\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"What You Will Learn Regarding Aventum?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Making a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"POST\"), \" request to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http://localhost:3030/users/login\"), \" with the user's email and password returns the user object in the response body and the access token(\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"x-access-token\"), \") in the response header.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"To login using a provider use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http://localhost:3030/users/auth/:provider\"), \" in an anchor tag, for example to login using Google use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http://localhost:3030/users/auth/google\"), \" or use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http://localhost:3030/users/auth/facebook\"), \" to login using Facebook.\"))), mdx(\"hr\", null), mdx(\"p\", null, \"This page will simply contain a login form with email and password fields.\"), mdx(\"p\", null, \"Inside the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"containers\"), \" folder create the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Login\"), \" folder and inside this one create the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Login.js\"), \" file.\"), mdx(\"p\", null, \"At the top of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Login.js\"), \" file import the required modules:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=src/containers/Login/Login.js\",\n    \"title\": \"src/containers/Login/Login.js\"\n  }), \"import React, { useState } from \\\"react\\\"\\nimport { useHistory } from \\\"react-router-dom\\\"\\nimport { boolean } from \\\"boolean\\\"\\n\")), mdx(\"p\", null, \"Next create our main \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Login\"), \" function:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"highlight=5 title=src/containers/Login/Login.js\",\n    \"highlight\": \"5\",\n    \"title\": \"src/containers/Login/Login.js\"\n  }), \"import React, { useState } from \\\"react\\\"\\nimport { useHistory } from \\\"react-router-dom\\\"\\nimport { boolean } from \\\"boolean\\\"\\n\\nexport default function Login({ onLogin, options }) {}\\n\")), mdx(\"p\", null, \"We need the history object because we want to redirect the user to home page on success:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"highlight=6 title=src/containers/Login/Login.js\",\n    \"highlight\": \"6\",\n    \"title\": \"src/containers/Login/Login.js\"\n  }), \"import React, { useState } from \\\"react\\\"\\nimport { useHistory } from \\\"react-router-dom\\\"\\nimport { boolean } from \\\"boolean\\\"\\n\\nexport default function Login({ onLogin, options }) {\\n  let history = useHistory()\\n}\\n\")), mdx(\"p\", null, \"We need two states in our component, a state to store the user's email address and another state to store the user's password.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"highlight=8,9 title=src/containers/Login/Login.js\",\n    \"highlight\": \"8,9\",\n    \"title\": \"src/containers/Login/Login.js\"\n  }), \"import React, { useState } from \\\"react\\\"\\nimport { useHistory } from \\\"react-router-dom\\\"\\nimport { boolean } from \\\"boolean\\\"\\n\\nexport default function Login({ onLogin, options }) {\\n  let history = useHistory()\\n\\n  const [email, setEmail] = useState(\\\"\\\")\\n  const [password, setPassword] = useState(\\\"\\\")\\n}\\n\")), mdx(\"p\", null, \"Next we need to check if the Facebook login or Google login is enable:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"highlight=11-22 title=src/containers/Login/Login.js\",\n    \"highlight\": \"11-22\",\n    \"title\": \"src/containers/Login/Login.js\"\n  }), \"import React, { useState } from \\\"react\\\"\\nimport { useHistory } from \\\"react-router-dom\\\"\\nimport { boolean } from \\\"boolean\\\"\\n\\nexport default function Login({ onLogin, options }) {\\n  let history = useHistory()\\n\\n  const [email, setEmail] = useState(\\\"\\\")\\n  const [password, setPassword] = useState(\\\"\\\")\\n\\n  let facebookLogin =\\n    options &&\\n    options.length &&\\n    boolean(options.find(e => e.name === \\\"ENABLE_FACEBOOK_LOGIN\\\").value)\\n      ? true\\n      : false\\n  let googleLogin =\\n    options &&\\n    options.length &&\\n    boolean(options.find(e => e.name === \\\"ENABLE_GOOGLE_LOGIN\\\").value)\\n      ? true\\n      : false\\n}\\n\")), mdx(\"p\", null, \"Next create the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onSubmit\"), \" function:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"highlight=24-46 title=src/containers/Login/Login.js\",\n    \"highlight\": \"24-46\",\n    \"title\": \"src/containers/Login/Login.js\"\n  }), \"import React, { useState } from \\\"react\\\"\\nimport { useHistory } from \\\"react-router-dom\\\"\\nimport { boolean } from \\\"boolean\\\"\\n\\nexport default function Login({ onLogin, options }) {\\n  let history = useHistory()\\n\\n  const [email, setEmail] = useState(\\\"\\\")\\n  const [password, setPassword] = useState(\\\"\\\")\\n\\n  let facebookLogin =\\n    options &&\\n    options.length &&\\n    boolean(options.find(e => e.name === \\\"ENABLE_FACEBOOK_LOGIN\\\").value)\\n      ? true\\n      : false\\n  let googleLogin =\\n    options &&\\n    options.length &&\\n    boolean(options.find(e => e.name === \\\"ENABLE_GOOGLE_LOGIN\\\").value)\\n      ? true\\n      : false\\n\\n  async function onSubmit(event) {\\n    event.preventDefault()\\n    const response = await fetch(\\\"http://localhost:3030/users/login\\\", {\\n      method: \\\"POST\\\",\\n      headers: {\\n        \\\"Content-Type\\\": \\\"application/json\\\",\\n      },\\n      body: JSON.stringify({\\n        email,\\n        password,\\n      }),\\n    })\\n\\n    localStorage.setItem(\\n      \\\"x-access-token\\\",\\n      response.headers.get(\\\"x-access-token\\\")\\n    )\\n\\n    let userData = await response.json()\\n    localStorage.setItem(\\\"user-data\\\", JSON.stringify(userData))\\n    onLogin(userData)\\n    history.push(\\\"/\\\")\\n  }\\n}\\n\")), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onSubmit\"), \" function will make a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"POST\"), \" request to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http://localhost:3030/users/login\"), \" with the email address, and the password, on the success we receive the user token(\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"x-access-token\"), \") in the response header so we save it in the local storage in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"x-access-token\"), \" item, we also receive the user data in the response body we save them to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"user-data\"), \" local storage item, then we call the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onLogin\"), \" props function and passing the user data and redirect the user to the frontend.\"), mdx(\"p\", null, \"Finally render everything:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"highlight=48-88 title=src/containers/Login/Login.js\",\n    \"highlight\": \"48-88\",\n    \"title\": \"src/containers/Login/Login.js\"\n  }), \"import React, { useState } from \\\"react\\\"\\nimport { useHistory } from \\\"react-router-dom\\\"\\nimport { boolean } from \\\"boolean\\\"\\n\\nexport default function Login({ onLogin, options }) {\\n  let history = useHistory()\\n\\n  const [email, setEmail] = useState(\\\"\\\")\\n  const [password, setPassword] = useState(\\\"\\\")\\n\\n  let facebookLogin =\\n    options &&\\n    options.length &&\\n    boolean(options.find(e => e.name === \\\"ENABLE_FACEBOOK_LOGIN\\\").value)\\n      ? true\\n      : false\\n  let googleLogin =\\n    options &&\\n    options.length &&\\n    boolean(options.find(e => e.name === \\\"ENABLE_GOOGLE_LOGIN\\\").value)\\n      ? true\\n      : false\\n\\n  async function onSubmit(event) {\\n    event.preventDefault()\\n    const response = await fetch(\\\"http://localhost:3030/users/login\\\", {\\n      method: \\\"POST\\\",\\n      headers: {\\n        \\\"Content-Type\\\": \\\"application/json\\\",\\n      },\\n      body: JSON.stringify({\\n        email,\\n        password,\\n      }),\\n    })\\n\\n    localStorage.setItem(\\n      \\\"x-access-token\\\",\\n      response.headers.get(\\\"x-access-token\\\")\\n    )\\n\\n    let userData = await response.json()\\n    localStorage.setItem(\\\"user-data\\\", JSON.stringify(userData))\\n    onLogin(userData)\\n    history.push(\\\"/\\\")\\n  }\\n\\n  return (\\n    <div>\\n      <form onSubmit={onSubmit}>\\n        <div className=\\\"field-wrapper\\\">\\n          <label htmlFor=\\\"email\\\">Enter your email: </label>\\n          <input\\n            value={email}\\n            onChange={e => setEmail(e.target.value)}\\n            type=\\\"email\\\"\\n            name=\\\"email\\\"\\n            id=\\\"email\\\"\\n            required\\n          />\\n        </div>\\n        <div className=\\\"field-wrapper\\\">\\n          <label htmlFor=\\\"password\\\">Enter your password: </label>\\n          <input\\n            value={password}\\n            onChange={e => setPassword(e.target.value)}\\n            type=\\\"password\\\"\\n            name=\\\"password\\\"\\n            id=\\\"password\\\"\\n            required\\n          />\\n        </div>\\n        <div className=\\\"field-wrapper\\\">\\n          <input type=\\\"submit\\\" value=\\\"Login!\\\" />\\n          {facebookLogin && (\\n            <a href={\\\"http://localhost:3030/users/auth/facebook\\\"}>\\n              Login with Facebook\\n            </a>\\n          )}\\n          {googleLogin && (\\n            <a href={\\\"http://localhost:3030/users/auth/google\\\"}>\\n              Login with Google\\n            </a>\\n          )}\\n        </div>\\n      </form>\\n    </div>\\n  )\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#what-you-will-learn-regarding-aventum","title":"What You Will Learn Regarding Aventum?"}]},"frontmatter":{"title":"Login Page"}}},"pageContext":{"slug":"/tutorial/blog/react/login-page/","prev":{"fields":{"slug":"/tutorial/blog/react/single-post-page/"},"frontmatter":{"title":"Single Post Page"}},"next":{"fields":{"slug":"/tutorial/blog/react/email-confirmation-status/"},"frontmatter":{"title":"Email Confirmation Status"}}}},"staticQueryHashes":["681094712"]}