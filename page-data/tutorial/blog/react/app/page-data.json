{"componentChunkName":"component---src-templates-doc-js","path":"/tutorial/blog/react/app/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"App.js\",\n  \"date\": \"2020-05-10\",\n  \"order\": 82\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Our \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"App.js\"), \" file will mainly contain the routing logic.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Clear the \", mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"src/App.js\"), \" file\"), \", let's start by importing the required modules, put the following at the top of the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"App.js\"), \" file.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"title=src/App.js\",\n    \"title\": \"src/App.js\"\n  }, \"import React from \\\"react\\\"\\nimport { BrowserRouter as Router, Switch, Route, Link } from \\\"react-router-dom\\\"\\nimport Home from \\\"./containers/Home/Home\\\"\\nimport Login from \\\"./containers/Login/Login\\\"\\nimport Registration from \\\"./containers/Registration/Registration\\\"\\nimport ResetPassword from \\\"./containers/ResetPassword/ResetPassword\\\"\\nimport ProviderLogin from \\\"./containers/ProviderLogin/ProviderLogin\\\"\\nimport ForgetPassword from \\\"./containers/ForgetPassword/ForgetPassword\\\"\\nimport EmailConfirmation from \\\"./containers/EmailConfirmation/EmailConfirmation\\\"\\nimport Profile from \\\"./containers/Profile/Profile\\\"\\nimport Post from \\\"./containers/Post/Post\\\"\\nimport classes from \\\"./App.module.css\\\"\\nimport useAuth from \\\"./reactHooks/useAuth\\\"\\nimport useOptions from \\\"./reactHooks/useOptions\\\"\\n\")), mdx(\"p\", null, \"Next create our component function:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"highlight=16 title=src/App.js\",\n    \"highlight\": \"16\",\n    \"title\": \"src/App.js\"\n  }, \"import React from \\\"react\\\"\\nimport { BrowserRouter as Router, Switch, Route, Link } from \\\"react-router-dom\\\"\\nimport Home from \\\"./containers/Home/Home\\\"\\nimport Login from \\\"./containers/Login/Login\\\"\\nimport Registration from \\\"./containers/Registration/Registration\\\"\\nimport ResetPassword from \\\"./containers/ResetPassword/ResetPassword\\\"\\nimport ProviderLogin from \\\"./containers/ProviderLogin/ProviderLogin\\\"\\nimport ForgetPassword from \\\"./containers/ForgetPassword/ForgetPassword\\\"\\nimport EmailConfirmation from \\\"./containers/EmailConfirmation/EmailConfirmation\\\"\\nimport Profile from \\\"./containers/Profile/Profile\\\"\\nimport Post from \\\"./containers/Post/Post\\\"\\nimport classes from \\\"./App.module.css\\\"\\nimport useAuth from \\\"./reactHooks/useAuth\\\"\\nimport useOptions from \\\"./reactHooks/useOptions\\\"\\n\\nexport default function App() {}\\n\")), mdx(\"p\", null, \"Now let's destructure the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"user\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"logout\"), \", and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onLogin\"), \" from our \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../custom-react-hooks/#useauthjs\"\n  }, \"useAuth\"), \" custom hook and grab the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"options\"), \" from our \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../custom-react-hooks/#useoptionsjs\"\n  }, \"useOptions\"), \" custom hook.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"highlight=17,18 title=src/App.js\",\n    \"highlight\": \"17,18\",\n    \"title\": \"src/App.js\"\n  }, \"import React from \\\"react\\\"\\nimport { BrowserRouter as Router, Switch, Route, Link } from \\\"react-router-dom\\\"\\nimport Home from \\\"./containers/Home/Home\\\"\\nimport Login from \\\"./containers/Login/Login\\\"\\nimport Registration from \\\"./containers/Registration/Registration\\\"\\nimport ResetPassword from \\\"./containers/ResetPassword/ResetPassword\\\"\\nimport ProviderLogin from \\\"./containers/ProviderLogin/ProviderLogin\\\"\\nimport ForgetPassword from \\\"./containers/ForgetPassword/ForgetPassword\\\"\\nimport EmailConfirmation from \\\"./containers/EmailConfirmation/EmailConfirmation\\\"\\nimport Profile from \\\"./containers/Profile/Profile\\\"\\nimport Post from \\\"./containers/Post/Post\\\"\\nimport classes from \\\"./App.module.css\\\"\\nimport useAuth from \\\"./reactHooks/useAuth\\\"\\nimport useOptions from \\\"./reactHooks/useOptions\\\"\\n\\nexport default function App() {\\n  let { user, logout, onLogin } = useAuth()\\n  const options = useOptions()\\n}\\n\")), mdx(\"p\", null, \"Next, define the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"links\"), \" array that will hold the links that will be showing up to all users.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"highlight=20-25 title=src/App.js\",\n    \"highlight\": \"20-25\",\n    \"title\": \"src/App.js\"\n  }, \"import React from \\\"react\\\"\\nimport { BrowserRouter as Router, Switch, Route, Link } from \\\"react-router-dom\\\"\\nimport Home from \\\"./containers/Home/Home\\\"\\nimport Login from \\\"./containers/Login/Login\\\"\\nimport Registration from \\\"./containers/Registration/Registration\\\"\\nimport ResetPassword from \\\"./containers/ResetPassword/ResetPassword\\\"\\nimport ProviderLogin from \\\"./containers/ProviderLogin/ProviderLogin\\\"\\nimport ForgetPassword from \\\"./containers/ForgetPassword/ForgetPassword\\\"\\nimport EmailConfirmation from \\\"./containers/EmailConfirmation/EmailConfirmation\\\"\\nimport Profile from \\\"./containers/Profile/Profile\\\"\\nimport Post from \\\"./containers/Post/Post\\\"\\nimport classes from \\\"./App.module.css\\\"\\nimport useAuth from \\\"./reactHooks/useAuth\\\"\\nimport useOptions from \\\"./reactHooks/useOptions\\\"\\n\\nexport default function App() {\\n  let { user, logout, onLogin } = useAuth()\\n  const options = useOptions()\\n\\n  let links = [\\n    {\\n      path: \\\"/\\\",\\n      label: \\\"Home\\\",\\n    },\\n  ]\\n}\\n\")), mdx(\"p\", null, \"Next, define the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"logoutLinks\"), \" array that will contain the links that will be showing up to the not logged in users.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"highlight=27-40 title=src/App.js\",\n    \"highlight\": \"27-40\",\n    \"title\": \"src/App.js\"\n  }, \"import React from \\\"react\\\"\\nimport { BrowserRouter as Router, Switch, Route, Link } from \\\"react-router-dom\\\"\\nimport Home from \\\"./containers/Home/Home\\\"\\nimport Login from \\\"./containers/Login/Login\\\"\\nimport Registration from \\\"./containers/Registration/Registration\\\"\\nimport ResetPassword from \\\"./containers/ResetPassword/ResetPassword\\\"\\nimport ProviderLogin from \\\"./containers/ProviderLogin/ProviderLogin\\\"\\nimport ForgetPassword from \\\"./containers/ForgetPassword/ForgetPassword\\\"\\nimport EmailConfirmation from \\\"./containers/EmailConfirmation/EmailConfirmation\\\"\\nimport Profile from \\\"./containers/Profile/Profile\\\"\\nimport Post from \\\"./containers/Post/Post\\\"\\nimport classes from \\\"./App.module.css\\\"\\nimport useAuth from \\\"./reactHooks/useAuth\\\"\\nimport useOptions from \\\"./reactHooks/useOptions\\\"\\n\\nexport default function App() {\\n  let { user, logout, onLogin } = useAuth()\\n  const options = useOptions()\\n\\n  let links = [\\n    {\\n      path: \\\"/\\\",\\n      label: \\\"Home\\\",\\n    },\\n  ]\\n\\n  const logoutLinks = [\\n    {\\n      path: \\\"/login\\\",\\n      label: \\\"Login\\\",\\n    },\\n    {\\n      path: \\\"/registration\\\",\\n      label: \\\"Registration\\\",\\n    },\\n    {\\n      path: \\\"/forgot-password\\\",\\n      label: \\\"Forget Password\\\",\\n    },\\n  ]\\n}\\n\")), mdx(\"p\", null, \"Next define the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"loginLinks\"), \" that will hold the links that will be showing up to the logged in users only:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"highlight=42-55 title=src/App.js\",\n    \"highlight\": \"42-55\",\n    \"title\": \"src/App.js\"\n  }, \"import React from \\\"react\\\"\\nimport { BrowserRouter as Router, Switch, Route, Link } from \\\"react-router-dom\\\"\\nimport Home from \\\"./containers/Home/Home\\\"\\nimport Login from \\\"./containers/Login/Login\\\"\\nimport Registration from \\\"./containers/Registration/Registration\\\"\\nimport ResetPassword from \\\"./containers/ResetPassword/ResetPassword\\\"\\nimport ProviderLogin from \\\"./containers/ProviderLogin/ProviderLogin\\\"\\nimport ForgetPassword from \\\"./containers/ForgetPassword/ForgetPassword\\\"\\nimport EmailConfirmation from \\\"./containers/EmailConfirmation/EmailConfirmation\\\"\\nimport Profile from \\\"./containers/Profile/Profile\\\"\\nimport Post from \\\"./containers/Post/Post\\\"\\nimport classes from \\\"./App.module.css\\\"\\nimport useAuth from \\\"./reactHooks/useAuth\\\"\\nimport useOptions from \\\"./reactHooks/useOptions\\\"\\n\\nexport default function App() {\\n  let { user, logout, onLogin } = useAuth()\\n  const options = useOptions()\\n\\n  let links = [\\n    {\\n      path: \\\"/\\\",\\n      label: \\\"Home\\\",\\n    },\\n  ]\\n\\n  const logoutLinks = [\\n    {\\n      path: \\\"/login\\\",\\n      label: \\\"Login\\\",\\n    },\\n    {\\n      path: \\\"/registration\\\",\\n      label: \\\"Registration\\\",\\n    },\\n    {\\n      path: \\\"/forgot-password\\\",\\n      label: \\\"Forget Password\\\",\\n    },\\n  ]\\n\\n  const loginLinks = [\\n    {\\n      path: \\\"/profile\\\",\\n      label: \\\"Profile\\\",\\n    },\\n    {\\n      path: \\\"/logout\\\",\\n      label: \\\"Logout\\\",\\n      onClick: e => {\\n        e.preventDefault()\\n        logout()\\n      },\\n    },\\n  ]\\n}\\n\")), mdx(\"p\", null, \"Next, merge the links depending on if the user is logged in or not.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"highlight=57-61 title=src/App.js\",\n    \"highlight\": \"57-61\",\n    \"title\": \"src/App.js\"\n  }, \"import React from \\\"react\\\"\\nimport { BrowserRouter as Router, Switch, Route, Link } from \\\"react-router-dom\\\"\\nimport Home from \\\"./containers/Home/Home\\\"\\nimport Login from \\\"./containers/Login/Login\\\"\\nimport Registration from \\\"./containers/Registration/Registration\\\"\\nimport ResetPassword from \\\"./containers/ResetPassword/ResetPassword\\\"\\nimport ProviderLogin from \\\"./containers/ProviderLogin/ProviderLogin\\\"\\nimport ForgetPassword from \\\"./containers/ForgetPassword/ForgetPassword\\\"\\nimport EmailConfirmation from \\\"./containers/EmailConfirmation/EmailConfirmation\\\"\\nimport Profile from \\\"./containers/Profile/Profile\\\"\\nimport Post from \\\"./containers/Post/Post\\\"\\nimport classes from \\\"./App.module.css\\\"\\nimport useAuth from \\\"./reactHooks/useAuth\\\"\\nimport useOptions from \\\"./reactHooks/useOptions\\\"\\n\\nexport default function App() {\\n  let { user, logout, onLogin } = useAuth()\\n  const options = useOptions()\\n\\n  let links = [\\n    {\\n      path: \\\"/\\\",\\n      label: \\\"Home\\\",\\n    },\\n  ]\\n\\n  const logoutLinks = [\\n    {\\n      path: \\\"/login\\\",\\n      label: \\\"Login\\\",\\n    },\\n    {\\n      path: \\\"/registration\\\",\\n      label: \\\"Registration\\\",\\n    },\\n    {\\n      path: \\\"/forgot-password\\\",\\n      label: \\\"Forget Password\\\",\\n    },\\n  ]\\n\\n  const loginLinks = [\\n    {\\n      path: \\\"/profile\\\",\\n      label: \\\"Profile\\\",\\n    },\\n    {\\n      path: \\\"/logout\\\",\\n      label: \\\"Logout\\\",\\n      onClick: e => {\\n        e.preventDefault()\\n        logout()\\n      },\\n    },\\n  ]\\n\\n  if (user) {\\n    links = [...links, ...loginLinks]\\n  } else {\\n    links = [...links, ...logoutLinks]\\n  }\\n}\\n\")), mdx(\"p\", null, \"Finally render our app:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"highlight=63-109 title=src/App.js\",\n    \"highlight\": \"63-109\",\n    \"title\": \"src/App.js\"\n  }, \"import React from \\\"react\\\"\\nimport { BrowserRouter as Router, Switch, Route, Link } from \\\"react-router-dom\\\"\\nimport Home from \\\"./containers/Home/Home\\\"\\nimport Login from \\\"./containers/Login/Login\\\"\\nimport Registration from \\\"./containers/Registration/Registration\\\"\\nimport ResetPassword from \\\"./containers/ResetPassword/ResetPassword\\\"\\nimport ProviderLogin from \\\"./containers/ProviderLogin/ProviderLogin\\\"\\nimport ForgetPassword from \\\"./containers/ForgetPassword/ForgetPassword\\\"\\nimport EmailConfirmation from \\\"./containers/EmailConfirmation/EmailConfirmation\\\"\\nimport Profile from \\\"./containers/Profile/Profile\\\"\\nimport Post from \\\"./containers/Post/Post\\\"\\nimport classes from \\\"./App.module.css\\\"\\nimport useAuth from \\\"./reactHooks/useAuth\\\"\\nimport useOptions from \\\"./reactHooks/useOptions\\\"\\n\\nexport default function App() {\\n  let { user, logout, onLogin } = useAuth()\\n  const options = useOptions()\\n\\n  let links = [\\n    {\\n      path: \\\"/\\\",\\n      label: \\\"Home\\\",\\n    },\\n  ]\\n\\n  const logoutLinks = [\\n    {\\n      path: \\\"/login\\\",\\n      label: \\\"Login\\\",\\n    },\\n    {\\n      path: \\\"/registration\\\",\\n      label: \\\"Registration\\\",\\n    },\\n    {\\n      path: \\\"/forgot-password\\\",\\n      label: \\\"Forget Password\\\",\\n    },\\n  ]\\n\\n  const loginLinks = [\\n    {\\n      path: \\\"/profile\\\",\\n      label: \\\"Profile\\\",\\n    },\\n    {\\n      path: \\\"/logout\\\",\\n      label: \\\"Logout\\\",\\n      onClick: e => {\\n        e.preventDefault()\\n        logout()\\n      },\\n    },\\n  ]\\n\\n  if (user) {\\n    links = [...links, ...loginLinks]\\n  } else {\\n    links = [...links, ...logoutLinks]\\n  }\\n\\n  return (\\n    <Router>\\n      <div>\\n        <nav className={classes.mainNav}>\\n          <ul>\\n            {links.map(l => (\\n              <li key={l.label} onClick={l.onClick}>\\n                <Link to={l.path}>{l.label}</Link>\\n              </li>\\n            ))}\\n          </ul>\\n        </nav>\\n\\n        <h1>The Awesome Blog</h1>\\n\\n        <Switch>\\n          <Route path=\\\"/registration\\\">\\n            <Registration user={user} onLogin={onLogin} />\\n          </Route>\\n          <Route path=\\\"/reset-password/:token\\\">\\n            <ResetPassword />\\n          </Route>\\n          <Route path=\\\"/email-confirmation/:token\\\">\\n            <EmailConfirmation onLogin={onLogin} />\\n          </Route>\\n          <Route path=\\\"/forgot-password\\\">\\n            <ForgetPassword />\\n          </Route>\\n          <Route path=\\\"/profile\\\">\\n            <Profile user={user} onLogin={onLogin} />\\n          </Route>\\n          <Route path=\\\"/login/:provider/:token\\\">\\n            <ProviderLogin onLogin={onLogin} />\\n          </Route>\\n          <Route path=\\\"/login\\\">\\n            <Login onLogin={onLogin} options={options} />\\n          </Route>\\n          <Route path=\\\"/post/:id\\\">\\n            <Post user={user} />\\n          </Route>\\n          <Route path=\\\"/\\\">\\n            <Home />\\n          </Route>\\n        </Switch>\\n      </div>\\n    </Router>\\n  )\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{},"frontmatter":{"title":"App.js"}}},"pageContext":{"slug":"/tutorial/blog/react/app/","prev":{"fields":{"slug":"/tutorial/blog/react/custom-react-hooks/"},"frontmatter":{"title":"Custom React Hooks"}},"next":{"fields":{"slug":"/docs/front-end/"},"frontmatter":{"title":"Misc"}}}},"staticQueryHashes":["681094712"]}