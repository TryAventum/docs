{"componentChunkName":"component---src-templates-doc-js","path":"/tutorial/blog/react/profile/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Profile\",\n  \"date\": \"2020-05-10\",\n  \"order\": 77\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This is the profile page where the user will be able to update her/his data like the email address, password, etc. Our page will simply contain a form along with \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"../email-confirmation-status/\"\n  }), \"EmailConfirmationStatus\"), \" component.\"), mdx(\"h2\", null, \"What You Will Learn Regarding Aventum?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Making a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"PATCH\"), \" request to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"http://localhost:3030/users/profile\"), \" with the user's fields like \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"firstName\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"lastName\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"email\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"picture\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"password\"), \", and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"passwordConfirmation\"), \" will update the user's data and will return the updated user object in the response body.\")), mdx(\"hr\", null), mdx(\"p\", null, \"Inside the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"containers\"), \" folder create the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Profile\"), \" folder and inside this one create the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Profile.js\"), \" file.\"), mdx(\"p\", null, \"At the top of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Profile.js\"), \" file import the required modules:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=src/containers/Profile/Profile.js\",\n    \"title\": \"src/containers/Profile/Profile.js\"\n  }), \"import React, { useState } from \\\"react\\\"\\nimport { useHistory } from \\\"react-router-dom\\\"\\nimport EmailConfirmationStatus from \\\"../../components/EmailConfirmationStatus/EmailConfirmationStatus\\\"\\n\")), mdx(\"p\", null, \"Next create our main \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Profile\"), \" component function:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"highlight=5 title=src/containers/Profile/Profile.js\",\n    \"highlight\": \"5\",\n    \"title\": \"src/containers/Profile/Profile.js\"\n  }), \"import React, { useState } from \\\"react\\\"\\nimport { useHistory } from \\\"react-router-dom\\\"\\nimport EmailConfirmationStatus from \\\"../../components/EmailConfirmationStatus/EmailConfirmationStatus\\\"\\n\\nexport default function Profile({ user, onLogin }) {}\\n\")), mdx(\"p\", null, \"We need the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"history\"), \" to redirect the user to the home page on the success profile update.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"highlight=6 title=src/containers/Profile/Profile.js\",\n    \"highlight\": \"6\",\n    \"title\": \"src/containers/Profile/Profile.js\"\n  }), \"import React, { useState } from \\\"react\\\"\\nimport { useHistory } from \\\"react-router-dom\\\"\\nimport EmailConfirmationStatus from \\\"../../components/EmailConfirmationStatus/EmailConfirmationStatus\\\"\\n\\nexport default function Profile({ user, onLogin }) {\\n  let history = useHistory()\\n}\\n\")), mdx(\"p\", null, \"We will allow the user to update \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"firstName\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"lastName\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"email\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"picture\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"password\"), \", and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"passwordConfirmation\"), \" so we need states to manage these data.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"highlight=8-13 title=src/containers/Profile/Profile.js\",\n    \"highlight\": \"8-13\",\n    \"title\": \"src/containers/Profile/Profile.js\"\n  }), \"import React, { useState } from \\\"react\\\"\\nimport { useHistory } from \\\"react-router-dom\\\"\\nimport EmailConfirmationStatus from \\\"../../components/EmailConfirmationStatus/EmailConfirmationStatus\\\"\\n\\nexport default function Profile({ user, onLogin }) {\\n  let history = useHistory()\\n\\n  const [firstName, setFirstName] = useState(user.firstName)\\n  const [lastName, setLastName] = useState(user.lastName)\\n  const [email, setEmail] = useState(user.email)\\n  const [picture, setPicture] = useState(user.picture)\\n  const [password, setPassword] = useState(\\\"\\\")\\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\\\"\\\")\\n}\\n\")), mdx(\"p\", null, \"Next, define the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onSubmit\"), \" function that will be fired when the user clicks on the submit button of the profile form.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"highlight=15-37 title=src/containers/Profile/Profile.js\",\n    \"highlight\": \"15-37\",\n    \"title\": \"src/containers/Profile/Profile.js\"\n  }), \"import React, { useState } from \\\"react\\\"\\nimport { useHistory } from \\\"react-router-dom\\\"\\nimport EmailConfirmationStatus from \\\"../../components/EmailConfirmationStatus/EmailConfirmationStatus\\\"\\n\\nexport default function Profile({ user, onLogin }) {\\n  let history = useHistory()\\n\\n  const [firstName, setFirstName] = useState(user.firstName)\\n  const [lastName, setLastName] = useState(user.lastName)\\n  const [email, setEmail] = useState(user.email)\\n  const [picture, setPicture] = useState(user.picture)\\n  const [password, setPassword] = useState(\\\"\\\")\\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\\\"\\\")\\n\\n  async function onSubmit(event) {\\n    event.preventDefault()\\n    const response = await fetch(\\\"http://localhost:3030/users/profile\\\", {\\n      method: \\\"PATCH\\\",\\n      headers: {\\n        \\\"Content-Type\\\": \\\"application/json\\\",\\n        \\\"x-access-token\\\": localStorage.getItem(\\\"x-access-token\\\"),\\n      },\\n      body: JSON.stringify({\\n        firstName,\\n        lastName,\\n        email,\\n        picture,\\n        password,\\n        passwordConfirmation,\\n      }),\\n    })\\n\\n    let userData = await response.json()\\n    localStorage.setItem(\\\"user-data\\\", JSON.stringify(userData.user))\\n    onLogin(userData.user)\\n    history.push(\\\"/\\\")\\n  }\\n}\\n\")), mdx(\"p\", null, \"When the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onSubmit\"), \" function fired it makes a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PATCH\"), \" request to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http://localhost:3030/users/profile\"), \" along with the user data in the request body and the user token in the request header, on the success we will update the local user data and calling the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onLogin\"), \" props function and finally redirect the user to the home page.\"), mdx(\"p\", null, \"Finally render our page:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"highlight=39-114 title=src/containers/Profile/Profile.js\",\n    \"highlight\": \"39-114\",\n    \"title\": \"src/containers/Profile/Profile.js\"\n  }), \"import React, { useState } from \\\"react\\\"\\nimport { useHistory } from \\\"react-router-dom\\\"\\nimport EmailConfirmationStatus from \\\"../../components/EmailConfirmationStatus/EmailConfirmationStatus\\\"\\n\\nexport default function Profile({ user, onLogin }) {\\n  let history = useHistory()\\n\\n  const [firstName, setFirstName] = useState(user.firstName)\\n  const [lastName, setLastName] = useState(user.lastName)\\n  const [email, setEmail] = useState(user.email)\\n  const [picture, setPicture] = useState(user.picture)\\n  const [password, setPassword] = useState(\\\"\\\")\\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\\\"\\\")\\n\\n  async function onSubmit(event) {\\n    event.preventDefault()\\n    const response = await fetch(\\\"http://localhost:3030/users/profile\\\", {\\n      method: \\\"PATCH\\\",\\n      headers: {\\n        \\\"Content-Type\\\": \\\"application/json\\\",\\n        \\\"x-access-token\\\": localStorage.getItem(\\\"x-access-token\\\"),\\n      },\\n      body: JSON.stringify({\\n        firstName,\\n        lastName,\\n        email,\\n        picture,\\n        password,\\n        passwordConfirmation,\\n      }),\\n    })\\n\\n    let userData = await response.json()\\n    localStorage.setItem(\\\"user-data\\\", JSON.stringify(userData.user))\\n    onLogin(userData.user)\\n    history.push(\\\"/\\\")\\n  }\\n\\n  return (\\n    <div>\\n      <EmailConfirmationStatus user={user} />\\n      <form onSubmit={onSubmit}>\\n        <div className=\\\"field-wrapper\\\">\\n          <label htmlFor=\\\"firstName\\\">First Name: </label>\\n          <input\\n            value={firstName}\\n            onChange={e => setFirstName(e.target.value)}\\n            type=\\\"text\\\"\\n            name=\\\"firstName\\\"\\n            id=\\\"firstName\\\"\\n            required\\n          />\\n        </div>\\n        <div className=\\\"field-wrapper\\\">\\n          <label htmlFor=\\\"lastName\\\">Last Name: </label>\\n          <input\\n            value={lastName}\\n            onChange={e => setLastName(e.target.value)}\\n            type=\\\"text\\\"\\n            name=\\\"lastName\\\"\\n            id=\\\"lastName\\\"\\n            required\\n          />\\n        </div>\\n        <div className=\\\"field-wrapper\\\">\\n          <label htmlFor=\\\"email\\\">Enter your email: </label>\\n          <input\\n            value={email}\\n            onChange={e => setEmail(e.target.value)}\\n            type=\\\"email\\\"\\n            name=\\\"email\\\"\\n            id=\\\"email\\\"\\n            required\\n          />\\n        </div>\\n        <div className=\\\"field-wrapper\\\">\\n          <label htmlFor=\\\"picture\\\">Profile picture link: </label>\\n          <input\\n            value={picture}\\n            onChange={e => setPicture(e.target.value)}\\n            type=\\\"text\\\"\\n            name=\\\"picture\\\"\\n            id=\\\"picture\\\"\\n            required\\n          />\\n        </div>\\n        <div className=\\\"field-wrapper\\\">\\n          <label htmlFor=\\\"password\\\">Enter new password: </label>\\n          <input\\n            value={password}\\n            onChange={e => setPassword(e.target.value)}\\n            type=\\\"password\\\"\\n            name=\\\"password\\\"\\n            id=\\\"password\\\"\\n          />\\n        </div>\\n        <div className=\\\"field-wrapper\\\">\\n          <label htmlFor=\\\"passwordConfirmation\\\">\\n            Repeat your new password:{\\\" \\\"}\\n          </label>\\n          <input\\n            type=\\\"password\\\"\\n            name=\\\"passwordConfirmation\\\"\\n            id=\\\"passwordConfirmation\\\"\\n            value={passwordConfirmation}\\n            onChange={e => setPasswordConfirmation(e.target.value)}\\n          />\\n        </div>\\n        <div>\\n          <input type=\\\"submit\\\" value=\\\"Update Profile!\\\" />\\n        </div>\\n      </form>\\n    </div>\\n  )\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#what-you-will-learn-regarding-aventum","title":"What You Will Learn Regarding Aventum?"}]},"frontmatter":{"title":"Profile"}}},"pageContext":{"slug":"/tutorial/blog/react/profile/","prev":{"fields":{"slug":"/tutorial/blog/react/provider-login/"},"frontmatter":{"title":"Provider Login"}},"next":{"fields":{"slug":"/tutorial/blog/react/forget-password/"},"frontmatter":{"title":"Forget Password"}}}},"staticQueryHashes":["681094712"]}