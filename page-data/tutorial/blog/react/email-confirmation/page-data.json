{"componentChunkName":"component---src-templates-doc-js","path":"/tutorial/blog/react/email-confirmation/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Email Confirmation\",\n  \"date\": \"2020-05-10\",\n  \"order\": 75\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"When the user clicks on the link in the email that she/he receives to confirm his/her email address this page will be opened.\"), mdx(\"p\", null, \"This page will extract the token from the URL and sends it to Aventum's server to verify it, on the success the user's email address will be confirmed.\"), mdx(\"h2\", null, \"What You Will Learn Regarding Aventum?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Making a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"POST\"), \" request to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"http://localhost:3030/users/emailConfirmation\"), \" and put the token that extracted from the URL into the request body as \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"token\"), \" will confirm the user's email address.\")), mdx(\"hr\", null), mdx(\"p\", null, \"Inside the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"containers\"), \" folder create the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"EmailConfirmation\"), \" folder and inside this one create the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"EmailConfirmation.js\"), \" file.\"), mdx(\"p\", null, \"Inside \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"EmailConfirmation.js\"), \" file let's start with importing what this component's needs:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"title=src/containers/EmailConfirmation/EmailConfirmation.js\",\n    \"title\": \"src/containers/EmailConfirmation/EmailConfirmation.js\"\n  }, \"import React, { useCallback, useEffect } from \\\"react\\\"\\nimport { useHistory, useParams } from \\\"react-router-dom\\\"\\n\")), mdx(\"p\", null, \"Next create our main \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"EmailConfirmation\"), \" function:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"highlight=4 title=src/containers/EmailConfirmation/EmailConfirmation.js\",\n    \"highlight\": \"4\",\n    \"title\": \"src/containers/EmailConfirmation/EmailConfirmation.js\"\n  }, \"import React, { useCallback, useEffect } from \\\"react\\\"\\nimport { useHistory, useParams } from \\\"react-router-dom\\\"\\n\\nexport default function EmailConfirmation({ onLogin }) {}\\n\")), mdx(\"p\", null, \"We need to grab the token from the URL:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"highlight=5 title=src/containers/EmailConfirmation/EmailConfirmation.js\",\n    \"highlight\": \"5\",\n    \"title\": \"src/containers/EmailConfirmation/EmailConfirmation.js\"\n  }, \"import React, { useCallback, useEffect } from \\\"react\\\"\\nimport { useHistory, useParams } from \\\"react-router-dom\\\"\\n\\nexport default function EmailConfirmation({ onLogin }) {\\n  let { token } = useParams()\\n}\\n\")), mdx(\"p\", null, \"Next, we need the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"history\"), \" object to redirect the user to the profile page on success.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"highlight=6 title=src/containers/EmailConfirmation/EmailConfirmation.js\",\n    \"highlight\": \"6\",\n    \"title\": \"src/containers/EmailConfirmation/EmailConfirmation.js\"\n  }, \"import React, { useCallback, useEffect } from \\\"react\\\"\\nimport { useHistory, useParams } from \\\"react-router-dom\\\"\\n\\nexport default function EmailConfirmation({ onLogin }) {\\n  let { token } = useParams()\\n  let history = useHistory()\\n}\\n\")), mdx(\"p\", null, \"Next create \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"confirmEmail\"), \" function:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"highlight=6 title=src/containers/EmailConfirmation/EmailConfirmation.js\",\n    \"highlight\": \"6\",\n    \"title\": \"src/containers/EmailConfirmation/EmailConfirmation.js\"\n  }, \"import React, { useCallback, useEffect } from \\\"react\\\"\\nimport { useHistory, useParams } from \\\"react-router-dom\\\"\\n\\nexport default function EmailConfirmation({ onLogin }) {\\n  let { token } = useParams()\\n  let history = useHistory()\\n\\n  const confirmEmail = useCallback(async () => {\\n    const response = await fetch(\\n      `http://localhost:3030/users/emailConfirmation`,\\n      {\\n        method: \\\"POST\\\",\\n        headers: {\\n          \\\"Content-Type\\\": \\\"application/json\\\",\\n        },\\n        body: JSON.stringify({\\n          token,\\n        }),\\n      }\\n    )\\n\\n    if (response.status === 200) {\\n      let userData = JSON.parse(localStorage.getItem(\\\"user-data\\\"))\\n      userData.emailConfirmation = true\\n      localStorage.setItem(\\\"user-data\\\", JSON.stringify(userData))\\n      onLogin(userData)\\n      history.push(\\\"/profile\\\")\\n    }\\n  }, [])\\n}\\n\")), mdx(\"p\", null, \"This function will make a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"POST\"), \" request to the server and will put the token in the request body.\"), mdx(\"p\", null, \"On success, we will update the user data in the local storage and sets the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"emailConfirmation\"), \" property to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"true\"), \" and call the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onLogin\"), \" props function with the updated user data and finally redirect the user to the profile page.\"), mdx(\"p\", null, \"We will use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useEffect\"), \" React hook to fire this function:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"highlight=31-35 title=src/containers/EmailConfirmation/EmailConfirmation.js\",\n    \"highlight\": \"31-35\",\n    \"title\": \"src/containers/EmailConfirmation/EmailConfirmation.js\"\n  }, \"import React, { useCallback, useEffect } from \\\"react\\\"\\nimport { useHistory, useParams } from \\\"react-router-dom\\\"\\n\\nexport default function EmailConfirmation({ onLogin }) {\\n  let { token } = useParams()\\n  let history = useHistory()\\n\\n  const confirmEmail = useCallback(async () => {\\n    const response = await fetch(\\n      `http://localhost:3030/users/emailConfirmation`,\\n      {\\n        method: \\\"POST\\\",\\n        headers: {\\n          \\\"Content-Type\\\": \\\"application/json\\\",\\n        },\\n        body: JSON.stringify({\\n          token,\\n        }),\\n      }\\n    )\\n\\n    if (response.status === 200) {\\n      let userData = JSON.parse(localStorage.getItem(\\\"user-data\\\"))\\n      userData.emailConfirmation = true\\n      localStorage.setItem(\\\"user-data\\\", JSON.stringify(userData))\\n      onLogin(userData)\\n      history.push(\\\"/profile\\\")\\n    }\\n  }, [])\\n\\n  useEffect(() => {\\n    confirmEmail()\\n  }, [confirmEmail])\\n\\n  return <div>Verifying...</div>\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#what-you-will-learn-regarding-aventum","title":"What You Will Learn Regarding Aventum?"}]},"frontmatter":{"title":"Email Confirmation"}}},"pageContext":{"slug":"/tutorial/blog/react/email-confirmation/","prev":{"fields":{"slug":"/tutorial/blog/react/email-confirmation-status/"},"frontmatter":{"title":"Email Confirmation Status"}},"next":{"fields":{"slug":"/tutorial/blog/react/provider-login/"},"frontmatter":{"title":"Provider Login"}}}},"staticQueryHashes":["681094712"]}