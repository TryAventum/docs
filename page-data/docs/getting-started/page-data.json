{"componentChunkName":"component---src-templates-doc-js","path":"/docs/getting-started/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Requirements & Configurations\",\n  \"date\": \"2020-03-22\",\n  \"order\": 1\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Requirements Summary\"), mdx(\"p\", null, \"You need the following to get Aventum up and running:\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"If you have Docker then you will not need any of the following, for more info please check the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"./installation/\"\n  }), \"Installation\"), \" section!\")), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://nodejs.org/\"\n  }), \"Node.js\"), \"(LTS version is recommended).\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.postgresql.org/\"\n  }), \"PostgreSQL\"), \" or \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.mongodb.com/\"\n  }), \"MongoDB\"), \" or \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://mariadb.org/\"\n  }), \"MariaDB\"), \" or \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.mysql.com/\"\n  }), \"MySQL\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://redis.io/\"\n  }), \"Redis\"))), mdx(\"h2\", null, \"Configurations Summary\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Sample of server configurations available in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"pg.env\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"mongo.env\"), \" files, simply create a copy from one of those files and name it \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".env\"), \" and change the values to suit your need.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Dashboard configuration files are\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".env.test\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".env.development\"), \", and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".env.production\"), \" depends on the environment, just create your copy from them and name them like \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".env.test.local\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".env.development.local\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".env.production.local\"), \" and change the configurations as you want.\")), mdx(\"h2\", null, \"Supported Databases\"), mdx(\"p\", null, \"Aventum tested and support SQL based databases like PostgreSQL/MySQL/MariaDB and MongoDB.\"), mdx(\"p\", null, \"Since Aventum uses \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://knexjs.org\"\n  }), \"Knex.js\"), \" under the hood as a query builder for the SQL based databases so it should work with other SQL based databases that \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://knexjs.org\"\n  }), \"Knex.js\"), \" supports like MSSQL, SQLite3, Oracle, and Amazon Redshift however we didn't test it yet with these databases(any contribution in this area will be more than welcome).\"), mdx(\"h2\", null, \"Modularity\"), mdx(\"p\", null, \"It is good to know that Aventum consists of two main parts server and dashboard, the server is an \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://expressjs.com/\"\n  }), \"Express\"), \" server and the dashboard is a react app bootstrapped with \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://create-react-app.dev/\"\n  }), \"create-react-app\"), \".\"), mdx(\"h2\", null, \"The Server Configuration File(s)\"), mdx(\"p\", null, \"We included two sample configuration files \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pg.env\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"mongo.env\"), \", you can choose any of these files and create a copy from it with a name like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".env\"), \", Aventum server uses \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.npmjs.com/package/dotenv-flow\"\n  }), \"dotenv-flow\"), \" behind the scenes to parse these \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".env\"), \" files.\"), mdx(\"p\", null, \"You can set a configuration file per environment like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".env.development\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".env.production\"), \", here are what these environment variables mean:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"DB_TYPE\"), \" the database type that you want to use e.g. \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"pg\"), \" (for PostgreSQL), \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"mysql\"), \" for MySQL and MariaDB, and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"mongodb\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"DB_NAME\"), \" the database name.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"DB_USER\"), \" the database user.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"DB_PASSWORD\"), \" the database password.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"DB_HOST\"), \" the database host.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"DB_PORT\"), \" the database port.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"PORT\"), \" the port that the server will run on.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"REDIS_PORT\"), \" Redis port.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"REDIS_HOST\"), \" Redis host.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"REDIS_DB\"), \" Redis database.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"REDIS_PASSWORD\"), \" Redis password.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"REDIS_FAMILY\"), \" 4 (IPv4) or 6 (IPv6).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"SHOW_ERRORS\"), \" NOT FULL USED AT THE MOMENT.\")), mdx(\"h2\", null, \"Dashboard Configuration File\"), mdx(\"p\", null, \"Aventum dashboard bootstrapped with \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://create-react-app.dev/\"\n  }), \"create-react-app\"), \" the file that picked depends on the environment, so there are three different files:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \".env.production\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \".env.development\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \".env.test\")), mdx(\"p\", null, \"Create your copies from these files and name them like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".env.test.local\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".env.development.local\"), \", and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".env.production.local\"), \" and change the values in these files to suits your needs, each of these files contains \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"REACT_APP_BASE_URL\"), \" environment variable which you can use to set up the Aventum server URL and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PORT\"), \" environment variable which is the port that the dashboard will use in the development mode for example.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#requirements-summary","title":"Requirements Summary"},{"url":"#configurations-summary","title":"Configurations Summary"},{"url":"#supported-databases","title":"Supported Databases"},{"url":"#modularity","title":"Modularity"},{"url":"#the-server-configuration-files","title":"The Server Configuration File(s)"},{"url":"#dashboard-configuration-file","title":"Dashboard Configuration File"}]},"frontmatter":{"title":"Requirements & Configurations"}}},"pageContext":{"slug":"/docs/getting-started/","prev":{"fields":{"slug":"/docs/"},"frontmatter":{"title":"Aventum Documentation"}},"next":{"fields":{"slug":"/docs/getting-started/installation/"},"frontmatter":{"title":"Installation"}}}},"staticQueryHashes":["681094712"]}